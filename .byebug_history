continue
@orders
next
@restaurant_orders.empty?
@restaurant_orders
continue
next
@restaurant_orders
continue
@status_orders
continue
@status_orders
continue
Order.where("status ? 'received'")
Order.where("status ? 'shipped'")
Order.where("status ? 'receieved'")
@status_orders.flatten & Order.where("status ? 'receieved'")
@status_orders.flatten
@status_orders
@orders
continue
@status_orders.flatten
@status_orders
continue
@orders
continue
@orders
continue
params[:filter_statuses].inject { |final, status| final +  Order.where("status ? '#{status}'") }
params[:filter_statuses].inject { |final, status| Order.where("status ? '#{status}'") }
params[:filter_statuses].inject { |status| Order.where("status ? '#{status}'") }
params[:filter_statuses].inject { |status| puts status }
params[:filter_statuses]
@orders
continue
@orders
continue
@status_orders
@restaurant_orders
@orders
@status_orders
continue
@status_orders
continue
@invoices.second
@invoices.first
@invoices.third.invoice_items
@invoices.second.invoice_items
@invoices.first.invoice_items
@invoices.last.invoice_items
@invoices.fifth.invoice_items
@invoices.fourth.invoice_items
@invoices.third.invoice_items
@invoices.second.invoice_items
@invoices.first.invoice_items
@invoices.first
@invoice
@invoices.fifth.order.order_items
@invoices.fourth.order.order_items
@invoices.third.order.order_items
@invoices.second.order.order_items
@invoices.first.order.order_items
@invoices.first.order
@invoices.first
@invoices
continue
@invoices.count
@invoices
continue
@supplier.invoices
@supplier
